Vagrant.configure("2") do |config|
    # Configuración de la imagen base
    config.vm.box = "ubuntu/jammy64"
  
    # Definimos los servidores
    servers = {
      "server" => "192.168.56.10",
      "host1"  => "192.168.56.11",
      "host2"  => "192.168.56.12"
    }
  
    servers.each do |name, ip|
      config.vm.define name do |node|
        node.vm.hostname = name
        node.vm.network "private_network", ip: ip
  
        node.vm.provider "virtualbox" do |vb|
          vb.memory = "512"
          vb.cpus = 1
        end
  
        # Configuración especial para el servidor
        if name == "server"
          node.vm.provision "shell", inline: <<-SHELL
            apt-get update
            apt-get install -y ansible sshpass
            ssh-keygen -t rsa -b 4096 -f /home/vagrant/.ssh/id_rsa -q -N ""
            cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
            cat /home/vagrant/.ssh/id_rsa.pub > /vagrant/authorized_keys
            chown -R vagrant:vagrant /home/vagrant/.ssh
            echo "192.168.56.11 host1" >> /etc/hosts
            echo "192.168.56.12 host2" >> /etc/hosts
            mkdir -p /etc/ansible
            echo -e "[labservers]\nhost1\nhost2" >> /etc/ansible/hosts
          SHELL
        else
          node.vm.provision "shell", inline: <<-SHELL
            apt-get update
            apt-get install -y openssh-server
            mkdir -p /home/vagrant/.ssh
            cat /vagrant/authorized_keys >> /home/vagrant/.ssh/authorized_keys
            chown -R vagrant:vagrant /home/vagrant/.ssh
          SHELL
        end

        # Configuración común
        node.vm.provision "shell", inline: <<-SHELL
            echo "PasswordAuthentication yes" > /etc/ssh/sshd_config.d/60-cloudimg-settings.conf
            systemctl restart sshd
        SHELL

      end
    end
  end
  